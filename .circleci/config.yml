version: 2.1

orbs:
  docker: circleci/docker@2.2.0
  kubernetes: circleci/kubernetes@1.3.1

jobs:
  bump-docker-tag-kustomize:
    docker:
      - image: cimg/base:stable
    steps:
      - run:
          name: Install kustomize
          command: |
            URL=https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize/v4.5.2/kustomize_v4.5.2_linux_amd64.tar.gz
            curl -L $URL | tar zx
            [ -w /usr/local/bin ] && SUDO="" || SUDO=sudo
            $SUDO chmod +x ./kustomize
            $SUDO mv ./kustomize /usr/local/bin
      - checkout
      - run:
          name: Bump Docker Tag
          command: |
            git config user.email "$GITHUB_EMAIL"
            git config user.name "CircleCI User"
            git checkout k8s
            git pull origin k8s
            cd manifests
            kustomize edit set image restaurant-reservation=$DOCKER_LOGIN/restaurant-reservation:$CIRCLE_SHA1
      - add_ssh_keys:
          fingerprints:
            - "$SSH_FINGERPRINT"
      - run:
          name: Commit & Push to GitHub
          command: |
            git config user.email "$GITHUB_EMAIL"
            git config user.name "CircleCI User"
            git checkout k8s
            git add manifests/kustomization.yaml
            git commit -am "Bumps docker tag [skip ci]"
            git push origin k8s

  argocd-configure:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - run:
          name: Pull Updated code from repo
          command: git pull origin k8s
      - kubernetes/install
      - run:
          name: Update Kubeconfig Credentials
          command: |
            kubectl config set-cluster restaurant-reservation
            kubectl config set clusters.restaurant-reservation.server https://44.208.158.69:16443
            kubectl config set clusters.restaurant-reservation.certificate-authority-data $KUBE_CERT_AUTH_DATA
            kubectl config set-credentials admin --token=$KUBE_TOKEN
            kubectl config set-context restaurant-reservation --cluster=restaurant-reservation --user=admin
            kubectl config use-context restaurant-reservation
      - kubernetes/create-or-update-resource:
          resource-file-path: argocd/config.yaml

  argocd-manual-sync:
    docker:
      - image: cimg/base:stable
    steps:
      - run:
          name: Install ArgoCD CLI
          command: |
            URL=https://$ARGOCD_SERVER/download/argocd-linux-amd64
            [ -w /usr/local/bin ] && SUDO="" || SUDO=sudo
            $SUDO curl --insecure -sSL -o /usr/local/bin/argocd $URL
            $SUDO chmod +x /usr/local/bin/argocd
      - run:
          name: ArgoCD CLI login
          command: argocd login $ARGOCD_SERVER --insecure --username $ARGOCD_USERNAME --password $ARGOCD_PASSWORD
      - run:
          name: Manual sync
          command: argocd app sync k8s-restaurant-reservation-argocd
      - run:
          name: Wait for application to reach a synced and healthy state
          command: argocd app wait k8s-restaurant-reservation-argocd

  run-tests:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - run:
          name: Run Tests
          command: |
            cd app
            cargo test
      - store_test_results:
          path: app/target/test-reports

workflows:
  build-and-deploy:
    jobs:
      - run-tests
      - docker/publish:
          image: $DOCKER_LOGIN/restaurant-reservation
          tag: $CIRCLE_SHA1,latest
          requires:
            - run-tests
      - bump-docker-tag-kustomize:
          requires:
            - docker/publish
      - argocd-configure:
          requires:
            - bump-docker-tag-kustomize
      - argocd-manual-sync:
          requires:
            - argocd-configure
